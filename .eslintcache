[{"C:\\Users\\maria\\react-portfolio-mhd\\src\\index.js":"1","C:\\Users\\maria\\react-portfolio-mhd\\src\\App.js":"2","C:\\Users\\maria\\react-portfolio-mhd\\src\\reportWebVitals.js":"3","C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\About\\index.js":"4","C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Footer\\index.js":"5","C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Header\\index.js":"6","C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Portfolio\\index.js":"7","C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Navigation\\index.js":"8","C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Resume\\index.js":"9","C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Contact\\index.js":"10","C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Project\\index.js":"11"},{"size":545,"mtime":1644182959906,"results":"12","hashOfConfig":"13"},{"size":720,"mtime":1644174686608,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1343,"mtime":1644166316563,"results":"16","hashOfConfig":"13"},{"size":646,"mtime":1643842579353,"results":"17","hashOfConfig":"13"},{"size":920,"mtime":1643819151721,"results":"18","hashOfConfig":"13"},{"size":846,"mtime":1643833053187,"results":"19","hashOfConfig":"13"},{"size":1373,"mtime":1644173977344,"results":"20","hashOfConfig":"13"},{"size":1447,"mtime":1643844350741,"results":"21","hashOfConfig":"13"},{"size":5716,"mtime":1644183512108,"results":"22","hashOfConfig":"13"},{"size":940,"mtime":1643842231500,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3l39cz",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\maria\\react-portfolio-mhd\\src\\index.js",[],"C:\\Users\\maria\\react-portfolio-mhd\\src\\App.js",[],["48","49"],"C:\\Users\\maria\\react-portfolio-mhd\\src\\reportWebVitals.js",[],"C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\About\\index.js",[],"C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Footer\\index.js",[],"C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Header\\index.js",[],"C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Portfolio\\index.js",[],"C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Navigation\\index.js",[],"C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Resume\\index.js",[],"C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Contact\\index.js",["50"],"import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport emailjs from 'emailjs-com';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\n\r\nconst ContactForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors }\r\n  } = useForm();\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  // Function that displays a success toast on bottom right of the page when form submission is successful\r\n  const toastifySuccess = () => {\r\n    toast('Form sent!', {\r\n      position: 'bottom-right',\r\n      autoClose: 5000,\r\n      hideProgressBar: true,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: false,\r\n      className: 'submit-feedback success',\r\n      toastId: 'notifyToast'\r\n    });\r\n  };\r\n\r\n  // Function called on submit that uses emailjs to send email of valid contact form\r\n  const onSubmit = async (data) => {\r\n    // Destrcture data object\r\n    const { name, email, subject, message } = data;\r\n    try {\r\n      // Disable form while processing submission\r\n      setDisabled(true);\r\n\r\n      // Define template params\r\n      const templateParams = {\r\n        name,\r\n        email,\r\n        subject,\r\n        message\r\n      };\r\n\r\n      // Use emailjs to email contact form data\r\n      await emailjs.send(\r\n        process.env.REACT_APP_SERVICE_ID,\r\n        process.env.REACT_APP_TEMPLATE_ID,\r\n        templateParams,\r\n        process.env.REACT_APP_USER_ID\r\n      );\r\n\r\n      // Reset contact form fields after submission\r\n      reset();\r\n      // Display success toast\r\n      toastifySuccess();\r\n      // Re-enable form submission\r\n      setDisabled(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  return (\r\n    <div className='ContactForm'>\r\n\r\n      <div className='container'>\r\n\r\n        <div className='row'>\r\n          \r\n          <div className='col-12 text-center'>\r\n\r\n            <div className='ContactForm'>\r\n\r\n              <form id='contact-form' onSubmit={handleSubmit(onSubmit)} noValidate>\r\n\r\n                {/* Row 1 of form */}\r\n                <div className='row formRow'>\r\n                <div className=\"mt-5\" >\r\n                  \r\n                    <input\r\n                      type='text'\r\n                      name='name'\r\n                      {...register('name', {\r\n                        required: { value: true, message: 'Please enter your name' },\r\n                        maxLength: {\r\n                          value: 30,\r\n                          message: 'Please use 30 characters or less'\r\n                        }\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Name'\r\n                    ></input>\r\n                    {errors.name && <span className='errorMessage'>{errors.name.message}</span>}\r\n                  </div>\r\n                  </div>\r\n\r\n                {/* Row for email adress */}\r\n\r\n                    <div className='row formRow'>\r\n                    <div className=\"mt-5\" >\r\n                    <input\r\n                      type='email'\r\n                      name='email'\r\n                      {...register('email', {\r\n                        required: true,\r\n                        // pattern: /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Email address'\r\n                    ></input>\r\n                    {errors.email && (\r\n                      <span className='errorMessage'>Please enter a valid email address</span>\r\n                    )}\r\n                    </div>\r\n                  </div>\r\n                \r\n\r\n\r\n                {/* Row for subject*/}\r\n                <div className='row formRow'>\r\n                <div className=\"mt-5\" >\r\n                  \r\n                    <input\r\n                      type='text'\r\n                      name='subject'\r\n                      {...register('subject', {\r\n                        required: { value: true, message: 'Please enter a subject' },\r\n                        maxLength: {\r\n                          value: 75,\r\n                          message: 'Subject cannot exceed 75 characters'\r\n                        }\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Subject'\r\n                    ></input>\r\n                    {errors.subject && (\r\n                      <span className='errorMessage'>{errors.subject.message}</span>\r\n                    )}                \r\n                 </div> \r\n                 </div>\r\n\r\n\r\n                {/* Row 3 of form */}\r\n                <div className='row formRow'>\r\n                <div className=\"mt-5\" >\r\n                    <textarea\r\n                      rows={3}\r\n                      name='message'\r\n                      {...register('message', {\r\n                        required: true\r\n                      })}\r\n                      className='form-control formInput'\r\n                      placeholder='Message'\r\n                    ></textarea>\r\n                    {errors.message && <span className='errorMessage'>Please enter a message</span>}\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"mt-5 mb-5\" >\r\n                <button className='submit-btn' type=\"submit\" onSubmit={handleSubmit}>Submit</button>\r\n                </div>\r\n              </form>\r\n\r\n            </div>\r\n            <ToastContainer />\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactForm;","C:\\Users\\maria\\react-portfolio-mhd\\src\\components\\Project\\index.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":14,"column":10,"nodeType":"57","messageId":"58","endLine":14,"endColumn":18},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'disabled' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]